<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="TeamAccount">

    <resultMap id="TeamAccount" type="com.zhaodesong.Edocumentsystem.po.TeamAccount">
        <result property="id" column="id"/>
        <result property="teamId" column="team_id"/>
        <result property="accountId" column="account_id"/>
        <result property="permission" column="permission"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
        id ,team_id ,account_id ,permission 
	    ]]>
	</sql>
	
    <insert id="insert"  useGeneratedKeys="true" keyProperty="id"  >
    <![CDATA[
        INSERT INTO team_account (
	        id  ,
	        team_id  ,
	        account_id  ,
	        permission  
        ) VALUES (
        	#{id, jdbcType=BIGINT} ,
        	#{teamId, jdbcType=INTEGER} ,
        	#{accountId, jdbcType=INTEGER} ,
        	#{permission, jdbcType=TINYINT} 
        )
    ]]>
    </insert>

	<insert id="insertNotNull"  useGeneratedKeys="true" keyProperty="id"  >
			<![CDATA[
			INSERT INTO team_account (
				<if test="null!=id">
					id  ,
				</if>
				<if test="null!=teamId">
					team_id  ,
				</if>
				<if test="null!=accountId">
					account_id  ,
				</if>
				<if test="null!=permission">
					permission  
				</if>
			) VALUES (
				<if test="null!=id">
					#{id, jdbcType=BIGINT} ,
				</if>
				<if test="null!=teamId">
					#{teamId, jdbcType=INTEGER} ,
				</if>
				<if test="null!=accountId">
					#{accountId, jdbcType=INTEGER} ,
				</if>
				<if test="null!=permission">
					#{permission, jdbcType=TINYINT} 
				</if>
			)
		]]>
	</insert>

   <insert id="insertBatch"   parameterType="java.util.List">
      INSERT INTO team_account ( <include refid="columns"/>) values
        <foreach collection="list" item="item" separator="," >
    (
        	#{item.id, jdbcType=BIGINT} ,
        	#{item.teamId, jdbcType=INTEGER} ,
        	#{item.accountId, jdbcType=INTEGER} ,
        	#{item.permission, jdbcType=TINYINT} 
    )
        </foreach>
    </insert>

    <update id="update" >
    <![CDATA[
        UPDATE team_account SET
	        team_id = #{teamId, jdbcType=INTEGER} ,
	        account_id = #{accountId, jdbcType=INTEGER} ,
	        permission = #{permission, jdbcType=TINYINT} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

	<update id="updateNotNull" >
			UPDATE team_account
				<set>
					<if test="null!=teamId">
						team_id = #{teamId, jdbcType=INTEGER} ,
					</if>

					<if test="null!=accountId">
						account_id = #{accountId, jdbcType=INTEGER} ,
					</if>

					<if test="null!=permission">
						permission = #{permission, jdbcType=TINYINT} 
					</if>

				</set>
			WHERE
				id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM team_account WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="TeamAccount">
	    SELECT <include refid="columns"/>
	    <![CDATA[
	        FROM team_account 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

	<sql id="findWhere">
	    <where>
	    	<choose>
	    		<when test="queryType==0">
	       		</when>
	       		<otherwise>
		        </otherwise>
	      	</choose>
		   	<if test="null!=id and ''!=id">
			    AND id = #{id}
			</if>
			<if test="null!=teamId">
				AND team_id = #{teamId}
			</if>
			<if test="null!=accountId">
				AND account_id = #{accountId}
			</if>
			<if test="null!=permission">
				AND permission = #{permission}
			</if>
	    </where>
	</sql>
	 
    <select id="findPageCount" resultType="long">
        SELECT count(*) FROM team_account <include refid="findWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="TeamAccount">
    	SELECT <include refid="columns"/> FROM team_account 
		<include refid="findWhere"/>
		<if test="null!=sortColumns and ''!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
	<select id="find" resultMap="TeamAccount">
	    SELECT <include refid="columns"/> FROM team_account 
		<include refid="findWhere"/>
		<if test="null!=sortColumns">
			ORDER BY ${sortColumns}
		</if>
    </select>
	
</mapper>